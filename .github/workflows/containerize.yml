name: Publish

on:
  push:
    branches:
      - master
  release:
    types:
      - published

jobs:
  push:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Create config file
      run: sed "s|http://localhost:3013/graphql|https://graphql.juffalow.com/graphql|g" ./src/config.example.ts > ./src/config.ts
    - name: Build
      run: docker build -t juffalow/react-relay-example .
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Push image to Digital Ocean Container Registry
      run: |
        VERSION=${GITHUB_REF#"refs/tags/"}
        IMAGE_NAME=registry.digitalocean.com/juffalow/react-relay-example
        
        echo $VERSION
        echo $IMAGE_NAME
        
        docker tag juffalow/react-relay-example $IMAGE_NAME:$VERSION
        
        doctl auth init
        doctl registry login
        
        docker push $IMAGE_NAME:$VERSION
  build_latest:
    name: Build latest image
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v
    - name: Build, tag, and push the image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPOSITORY_NAME }}
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
